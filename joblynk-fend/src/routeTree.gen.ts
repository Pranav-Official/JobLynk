/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RedirectRouteImport } from './routes/redirect'
import { Route as JobsRouteImport } from './routes/jobs'
import { Route as OnboardingRouteRouteImport } from './routes/onboarding/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingRoleRouteImport } from './routes/onboarding/role'
import { Route as OnboardingResumeRouteImport } from './routes/onboarding/resume'
import { Route as OnboardingPersonalRouteImport } from './routes/onboarding/personal'
import { Route as OnboardingExitRouteImport } from './routes/onboarding/exit'
import { Route as OnboardingEmploymentRouteImport } from './routes/onboarding/employment'
import { Route as OnboardingCompanyRouteImport } from './routes/onboarding/company'
import { Route as DashboardProfileRouteImport } from './routes/dashboard/profile'
import { Route as DashboardMyApplicationsRouteImport } from './routes/dashboard/myApplications'
import { Route as DashboardJobsRouteImport } from './routes/dashboard/jobs'
import { Route as DashboardApplicationsRouteImport } from './routes/dashboard/applications'

const RedirectRoute = RedirectRouteImport.update({
  id: '/redirect',
  path: '/redirect',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsRoute = JobsRouteImport.update({
  id: '/jobs',
  path: '/jobs',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRouteRoute = OnboardingRouteRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoleRoute = OnboardingRoleRouteImport.update({
  id: '/role',
  path: '/role',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingResumeRoute = OnboardingResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingPersonalRoute = OnboardingPersonalRouteImport.update({
  id: '/personal',
  path: '/personal',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingExitRoute = OnboardingExitRouteImport.update({
  id: '/exit',
  path: '/exit',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingEmploymentRoute = OnboardingEmploymentRouteImport.update({
  id: '/employment',
  path: '/employment',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingCompanyRoute = OnboardingCompanyRouteImport.update({
  id: '/company',
  path: '/company',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const DashboardProfileRoute = DashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardMyApplicationsRoute = DashboardMyApplicationsRouteImport.update({
  id: '/myApplications',
  path: '/myApplications',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardJobsRoute = DashboardJobsRouteImport.update({
  id: '/jobs',
  path: '/jobs',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardApplicationsRoute = DashboardApplicationsRouteImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => DashboardRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/jobs': typeof JobsRoute
  '/redirect': typeof RedirectRoute
  '/dashboard/applications': typeof DashboardApplicationsRoute
  '/dashboard/jobs': typeof DashboardJobsRoute
  '/dashboard/myApplications': typeof DashboardMyApplicationsRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/onboarding/company': typeof OnboardingCompanyRoute
  '/onboarding/employment': typeof OnboardingEmploymentRoute
  '/onboarding/exit': typeof OnboardingExitRoute
  '/onboarding/personal': typeof OnboardingPersonalRoute
  '/onboarding/resume': typeof OnboardingResumeRoute
  '/onboarding/role': typeof OnboardingRoleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/jobs': typeof JobsRoute
  '/redirect': typeof RedirectRoute
  '/dashboard/applications': typeof DashboardApplicationsRoute
  '/dashboard/jobs': typeof DashboardJobsRoute
  '/dashboard/myApplications': typeof DashboardMyApplicationsRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/onboarding/company': typeof OnboardingCompanyRoute
  '/onboarding/employment': typeof OnboardingEmploymentRoute
  '/onboarding/exit': typeof OnboardingExitRoute
  '/onboarding/personal': typeof OnboardingPersonalRoute
  '/onboarding/resume': typeof OnboardingResumeRoute
  '/onboarding/role': typeof OnboardingRoleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/jobs': typeof JobsRoute
  '/redirect': typeof RedirectRoute
  '/dashboard/applications': typeof DashboardApplicationsRoute
  '/dashboard/jobs': typeof DashboardJobsRoute
  '/dashboard/myApplications': typeof DashboardMyApplicationsRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/onboarding/company': typeof OnboardingCompanyRoute
  '/onboarding/employment': typeof OnboardingEmploymentRoute
  '/onboarding/exit': typeof OnboardingExitRoute
  '/onboarding/personal': typeof OnboardingPersonalRoute
  '/onboarding/resume': typeof OnboardingResumeRoute
  '/onboarding/role': typeof OnboardingRoleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/onboarding'
    | '/jobs'
    | '/redirect'
    | '/dashboard/applications'
    | '/dashboard/jobs'
    | '/dashboard/myApplications'
    | '/dashboard/profile'
    | '/onboarding/company'
    | '/onboarding/employment'
    | '/onboarding/exit'
    | '/onboarding/personal'
    | '/onboarding/resume'
    | '/onboarding/role'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/onboarding'
    | '/jobs'
    | '/redirect'
    | '/dashboard/applications'
    | '/dashboard/jobs'
    | '/dashboard/myApplications'
    | '/dashboard/profile'
    | '/onboarding/company'
    | '/onboarding/employment'
    | '/onboarding/exit'
    | '/onboarding/personal'
    | '/onboarding/resume'
    | '/onboarding/role'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/onboarding'
    | '/jobs'
    | '/redirect'
    | '/dashboard/applications'
    | '/dashboard/jobs'
    | '/dashboard/myApplications'
    | '/dashboard/profile'
    | '/onboarding/company'
    | '/onboarding/employment'
    | '/onboarding/exit'
    | '/onboarding/personal'
    | '/onboarding/resume'
    | '/onboarding/role'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  JobsRoute: typeof JobsRoute
  RedirectRoute: typeof RedirectRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/redirect': {
      id: '/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs': {
      id: '/jobs'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof JobsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/role': {
      id: '/onboarding/role'
      path: '/role'
      fullPath: '/onboarding/role'
      preLoaderRoute: typeof OnboardingRoleRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/onboarding/resume': {
      id: '/onboarding/resume'
      path: '/resume'
      fullPath: '/onboarding/resume'
      preLoaderRoute: typeof OnboardingResumeRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/onboarding/personal': {
      id: '/onboarding/personal'
      path: '/personal'
      fullPath: '/onboarding/personal'
      preLoaderRoute: typeof OnboardingPersonalRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/onboarding/exit': {
      id: '/onboarding/exit'
      path: '/exit'
      fullPath: '/onboarding/exit'
      preLoaderRoute: typeof OnboardingExitRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/onboarding/employment': {
      id: '/onboarding/employment'
      path: '/employment'
      fullPath: '/onboarding/employment'
      preLoaderRoute: typeof OnboardingEmploymentRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/onboarding/company': {
      id: '/onboarding/company'
      path: '/company'
      fullPath: '/onboarding/company'
      preLoaderRoute: typeof OnboardingCompanyRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/myApplications': {
      id: '/dashboard/myApplications'
      path: '/myApplications'
      fullPath: '/dashboard/myApplications'
      preLoaderRoute: typeof DashboardMyApplicationsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/jobs': {
      id: '/dashboard/jobs'
      path: '/jobs'
      fullPath: '/dashboard/jobs'
      preLoaderRoute: typeof DashboardJobsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/applications': {
      id: '/dashboard/applications'
      path: '/applications'
      fullPath: '/dashboard/applications'
      preLoaderRoute: typeof DashboardApplicationsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardApplicationsRoute: typeof DashboardApplicationsRoute
  DashboardJobsRoute: typeof DashboardJobsRoute
  DashboardMyApplicationsRoute: typeof DashboardMyApplicationsRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardApplicationsRoute: DashboardApplicationsRoute,
  DashboardJobsRoute: DashboardJobsRoute,
  DashboardMyApplicationsRoute: DashboardMyApplicationsRoute,
  DashboardProfileRoute: DashboardProfileRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface OnboardingRouteRouteChildren {
  OnboardingCompanyRoute: typeof OnboardingCompanyRoute
  OnboardingEmploymentRoute: typeof OnboardingEmploymentRoute
  OnboardingExitRoute: typeof OnboardingExitRoute
  OnboardingPersonalRoute: typeof OnboardingPersonalRoute
  OnboardingResumeRoute: typeof OnboardingResumeRoute
  OnboardingRoleRoute: typeof OnboardingRoleRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingCompanyRoute: OnboardingCompanyRoute,
  OnboardingEmploymentRoute: OnboardingEmploymentRoute,
  OnboardingExitRoute: OnboardingExitRoute,
  OnboardingPersonalRoute: OnboardingPersonalRoute,
  OnboardingResumeRoute: OnboardingResumeRoute,
  OnboardingRoleRoute: OnboardingRoleRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  JobsRoute: JobsRoute,
  RedirectRoute: RedirectRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
